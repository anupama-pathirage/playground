configurations {
    compilerPlugins {
        transitive = false
    }
    api {
        transitive = false
    }
}

dependencies {
    compilerPlugins project(":utils:compiler-plugin")
    api project(path: ":api:compiler", configuration: "apiJar")
}

task copyApi(type: Copy) {
    from configurations.api
    into "api" 
}

task copyCompilerPlugins(type: Copy) {
    from configurations.compilerPlugins
    into "plugins" 
}

def inputFiles = [
    project.file("cloudbuild.yaml"),
    project.file("Dockerfile"),
    project.file("resources")
]

task cloudBuild(type: Exec) {
    dependsOn copyApi
    dependsOn copyCompilerPlugins
    inputs.files(inputFiles)
    environment("BALLERINA_VERSION", project.ext.ballerinaVersion)
    commandLine "gcloud", "builds", "submit", "--config", "cloudbuild.yaml", 
        '--substitutions=_BALLERINA_VERSION=' + project.ext.ballerinaVersion, "."
}

def env = System.getenv()
def gcpProjectID = env["BPG_GCP_PROJECT_ID"]

task build(type: Exec) {
    dependsOn copyApi
    dependsOn copyCompilerPlugins
    inputs.files(inputFiles)
    commandLine 'docker', 'build', '-t', 'gcr.io/' + gcpProjectID +'/playground-compiler:' + project.version,
            '--build-arg', 'BALLERINA_VERSION=' + project.ext.ballerinaVersion, '.'
}
